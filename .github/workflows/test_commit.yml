name: Test Commit Step

on:
  workflow_dispatch: {}   # manual trigger in the Actions tab

permissions:
  contents: write

jobs:
  commit-step-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create dummy artifacts
        run: |
          mkdir -p Model_training
          echo "hello" | gzip > Model_training/Step1.csv.gz
          echo "trend,rows" > Model_training/topic_trend.csv
          echo '{"topics":[]}' > Model_training/topics_BERT.json
          # leave BERTopic_results2.csv.gz and unmatched_topics.json absent on purpose
          # to test conditional adds

      - name: Commit and push (only small/compressed files)
        run: |
          set -e
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          # git rm --cached Model_training/BERTopic_results.csv || true
          {
            echo 'BERTopic_results2.csv'
            echo 'Model_training/BERTopic_results.csv'
            echo 'Online_Extraction/all_RSS.json'
            echo 'Model_training/BERTopic_model'
          } | while read -r p; do
               grep -qxF "$p" .gitignore || echo "$p" >> .gitignore
            done
          git add .gitignore

          rm_cached () { for f in "$@"; do git rm --cached --ignore-unmatch -- "$f" || true; done; }
          rm_cached \
            Online_Extraction/all_RSS.json \
            Online_Extraction/all_RSS.json.gz \
            Model_training/BERTopic_model \
            BERTopic_results2.csv \
            Model_training/BERTopic_results.csv

          add_if_exists () { for f  in "$@"; do [ -f "$f" ] && git add "$f"; done; }

          add_if_exists \
            Model_training/BERTopic_results2.csv.gz \
            Model_training/topic_trend.csv \
            Model_training/topic_trend.csv \
            Model_training/topics_BERT.json \
            Model_training/unmatched_topics.json \
            Model_training/Step1.csv.gz \
            BERTopic_before.csv

          echo "== git status (porcelain) =="
          git status --porcelain=1 -uall || true
          ls -lh Model_training/BERTopic_results2.csv.gz || true
          ls -lh Model_training/topic_trend.csv* || true        
          ls -lh Model_training/Step1.csv.gz || true
          git commit -m "Update results CSV (gz) and topic trend" || echo "Nothing to commit"
          git pull --rebase --autostash origin main || true
          git push origin HEAD:main || true
